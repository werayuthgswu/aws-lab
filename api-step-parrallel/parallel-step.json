{
  "Comment": "A description of my state machine",
  "StartAt": "Pass-seturl",
  "States": {
    "Pass-seturl": {
      "Type": "Pass",
      "Output": {
        "url": "https://api.zippopotam.us/us/33445"
      },
      "Next": "Parallel"
    },
    "Parallel": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "Lambda Invoke",
          "States": {
            "Lambda Invoke": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "Output": "{% $states.result.Payload %}",
              "Arguments": {
                "FunctionName": "arn:aws:lambda:us-east-1:030095740776:function:zip2city:$LATEST",
                "Payload": "{% $states.input %}"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 3,
                  "BackoffRate": 2,
                  "JitterStrategy": "FULL"
                }
              ],
              "End": true
            }
          }
        },
        {
          "StartAt": "Call HTTPS APIs",
          "States": {
            "Call HTTPS APIs": {
              "Type": "Task",
              "Resource": "arn:aws:states:::http:invoke",
              "Arguments": {
                "Method": "GET",
                "InvocationConfig": {
                  "ConnectionArn": "arn:aws:events:us-east-1:030095740776:connection/testnewconnection/93603852-604d-4b19-a6ef-5faae53f9bd2"
                },
                "ApiEndpoint": "{% $states.input.url %}"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "BackoffRate": 2,
                  "IntervalSeconds": 1,
                  "MaxAttempts": 3,
                  "JitterStrategy": "FULL"
                }
              ],
              "Output": {
                "state": "{% $states.result.ResponseBody.places[0].state %}",
                "city": "{% $states.result.ResponseBody.places[0].\"place name\" %}"
              },
              "End": true
            }
          }
        }
      ],
      "Next": "Pass-showvar"
    },
    "Pass-showvar": {
      "Type": "Pass",
      "Next": "Choice-checkcity",
      "Assign": {
        "acity": "{% $states.input[1].city %}",
        "bcity": "{% $states.input[1].state %}",
        "ccity": "{% $states.input[0].body.city %}"
      }
    },
    "Choice-checkcity": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Success",
          "Condition": "{% ($states.input[1].city) = ($states.input[0].body.city) %}"
        }
      ],
      "Default": "Fail"
    },
    "Success": {
      "Type": "Succeed"
    },
    "Fail": {
      "Type": "Fail"
    }
  },
  "QueryLanguage": "JSONata"
}